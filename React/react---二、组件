先来一个实例：

var HelloMessage = React.createClass({
  render: function() {
    return <h1>Hello World!</h1>;
  }
});

ReactDOM.render(
  <HelloMessage />,
  document.getElementById('example')
);

上面代码：
React.createClass 方法用于生成一个组件类
HelloMessage就是一个组件类
<HelloMessage />实例组件类并输出信息
注意:
原生 HTML 元素名以小写字母开头，而自定义的 React 类名以大写字母开头，比如 HelloMessage 不能写成 helloMessage。
除此之外还需要注意组件类只能包含一个顶层标签，否则也会报错。


再来一个例子：

var HelloMessage = React.createClass({
  render: function() {
    return <h1>Hello {this.props.name}</h1>;
  }
});

ReactDOM.render(
  <HelloMessage name="Runoob" />,
  document.getElementById('example')
);
上面代码中：
this.props.name  组件的属性可以在组件类的 this.props 对象上获取

下面来看一下this.props：
this.props 对象的属性与组件的属性一一对应，但是有一个例外，就是 this.props.children 属性。它表示组件的所有子节点。
注意， this.props.children 的值有三种可能：
  如果当前组件没有子节点，它就是 undefined 
  如果有一个子节点，数据类型是 object 
  如果有多个子节点，数据类型就是 array 
  
React 提供一个工具方法 React.Children 来处理 this.props.children 。
我们可以用 React.Children.map 来遍历子节点，而不用担心 this.props.children 的数据类型是 undefined 还是 object。

